jobs:
  check-releases-file-is-up-to-date:
    name: Check if app/prod/releases.json is up to date
    run_when:
      on any branch:
        type: branch
        include_match: ^.*$
    context:
      tasks:
        build:
          traits: []
          scripts:
            include:
              - cider-ci/bundle-script.yml
            check:
              start_when:
                bundle has passed:
                  script_key: bundle
              body: |
                #!/usr/bin/env bash
                set -euo pipefail
                bundle exec ./bin/update-releases
                git diff --stat --exit-code -- app/prod/releases.json

  draft-release:
    name: Draft a release on GH
    run_when:
      on the release branch:
        type: branch
        include_match: ^release$
    context:
      tasks:
        release:
          include:
            - cider-ci/build-and-test.yml
          traits: {}
          scripts:
            # override the existing test; we don't care about the result
            test:
              body: exit 0
            draft-release:
              start_when:
                build-linux has passed:
                  script_key: build-linux
#               build-windows has passed:
#                 script_key: build-windows
                build-mac-os has passed:
                  script_key: build-mac-os
              timeout: 10 Minutes
              body: |
                #!/usr/bin/env bash
                set -euo pipefail
                bundle exec ./bin/draft-gh-release

  build:
    name: Build the App
    run_when:
      on any branch:
        type: branch
        include_match: ^.*$
    context:
      tasks:
        build:
          include:
            - cider-ci/build-and-test.yml
